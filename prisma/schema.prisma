generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categorias {
  id            Int             @id @default(autoincrement())
  nome          String
  descricao     String?
  codigo        String?         @unique
  produtos      produtos[]
  subcategorias subcategorias[]
}

model codigos_barras_produto {
  id            Int       @id @default(autoincrement())
  produto_id    Int
  codigo_barras String
  valido_ate    DateTime? @db.Date
  observacao    String?
  produtos      produtos  @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model montadoras {
  id                Int                 @id @default(autoincrement())
  nome              String
  codigo            String?             @unique
  cnpj              String              @default("")
  cidade            String              @default("")
  estado            String              @default("")
  rua               String              @default("")
  numero            String              @default("")
  cep               String              @default("")
  obs_endereco      String              @default("")
  data_cadastro     DateTime?           @default(now()) @db.Timestamp(6)
  observacoes       String?
  ocupacoes_estoque ocupacoes_estoque[]
  posicoes_estoque  posicoes_estoque[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model movimentacoes {
  id                                                                     Int                @id @default(autoincrement())
  ocupacao_origem_id                                                     Int?
  ocupacao_destino_id                                                    Int?
  tipo                                                                   String?            @default("Ajuste")
  quantidade                                                             Int
  data_hora                                                              DateTime           @db.Timestamp(6)
  responsavel_id                                                         Int?
  documento_id                                                           Int?
  motivo                                                                 String?
  observacoes                                                            String?
  ocupacoes_estoque_movimentacoes_ocupacao_destino_idToocupacoes_estoque ocupacoes_estoque? @relation("movimentacoes_ocupacao_destino_idToocupacoes_estoque", fields: [ocupacao_destino_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  ocupacoes_estoque_movimentacoes_ocupacao_origem_idToocupacoes_estoque  ocupacoes_estoque? @relation("movimentacoes_ocupacao_origem_idToocupacoes_estoque", fields: [ocupacao_origem_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model ocupacoes_estoque {
  id                                                                 Int               @id @default(autoincrement())
  lote_id                                                            Int?
  quantidade                                                         Int
  data_alocacao                                                      DateTime?         @default(now()) @db.Timestamp(6)
  observacoes                                                        String?
  produto_id                                                         Int?
  posicao_id                                                         Int?
  montadora_id                                                       Int?
  movimentacoes_movimentacoes_ocupacao_destino_idToocupacoes_estoque movimentacoes[]   @relation("movimentacoes_ocupacao_destino_idToocupacoes_estoque")
  movimentacoes_movimentacoes_ocupacao_origem_idToocupacoes_estoque  movimentacoes[]   @relation("movimentacoes_ocupacao_origem_idToocupacoes_estoque")
  montadoras                                                         montadoras?       @relation(fields: [montadora_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  posicoes_estoque                                                   posicoes_estoque? @relation(fields: [posicao_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  produtos                                                           produtos?         @relation(fields: [produto_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model posicoes_estoque {
  id                  Int                 @id @default(autoincrement())
  endereco            String
  status              String?             @default("Livre")
  ultima_movimentacao DateTime?           @db.Timestamp(6)
  observacoes         String?
  capacidade_maxima   Int?
  tipo_posicao        String?             @default("Padr√£o")
  montadora_id        Int?
  ocupacoes_estoque   ocupacoes_estoque[]
  montadoras          montadoras?         @relation(fields: [montadora_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model produtos {
  id                      Int                      @id @default(autoincrement())
  nome                    String?
  sku                     String?
  peso_unitario           Int?                     @default(1)
  volume_fisico           Int?                     @default(1)
  tipo_embalagem          String?
  descricao               String?
  codigo_barras           String?
  preco_custo             Int?
  preco_venda             Int?
  estoque_minimo          Int?                     @default(0)
  estoque_maximo          Int?                     @default(10000)
  ponto_reposicao         Int?
  tempo_reposicao         Int?                     @default(365)
  status                  String?                  @default("Ativo")
  unidade_medida          String?
  categoria_id            Int?
  subcategoria_id         Int?
  fornecedor_principal_id Int?
  data_cadastro           DateTime?                @default(now()) @db.Date
  imagem_url              String?
  codigos_barras_produto  codigos_barras_produto[]
  ocupacoes_estoque       ocupacoes_estoque[]
  categorias              categorias?              @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  subcategorias           subcategorias?           @relation(fields: [subcategoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model subcategorias {
  id           Int        @id @default(autoincrement())
  categoria_id Int
  nome         String
  descricao    String?
  codigo       String?    @unique
  produtos     produtos[]
  categorias   categorias @relation(fields: [categoria_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
